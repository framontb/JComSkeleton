<?xml version="1.0"  encoding="UTF-8" ?>

<project name="testsite" basedir="." default="build" 
    description="Creates a Joomla Component skeleton based on a given template">

    <!-- ==============================================  -->
    <!-- Define some common properties and filesets      -->
    <!-- ==============================================  -->

    <!-- Properties file and timestamp -->
    <property file="./buildfiles/user.properties" />
    <property file="./buildfiles/build.properties" />
    <tstamp><format pattern="%Y" property="YEAR"></format></tstamp>

    <!-- Fileset: template -->
    <fileset id="templates.template" dir="${folder.templates}">
        <include name="${template}/**"/>
        <exclude name="${template}/*.zip"/>
    </fileset>

    <!-- component.name as lower case-->
    <exec command="echo ${component.name} | awk '{print tolower($0)}'" outputProperty="component.name.lower" />
    <exec command="echo ${component.name} | awk '{print toupper($0)}'" outputProperty="component.name.upper" />
    <exec command='php -r "print(ucfirst(\"${component.name}\"));"' outputProperty="component.name.upper.first" />

    <!-- Create skeleton folder if not exist-->
    <mkdir dir="${folder.skeletons}" />

    <!-- ============================================  -->
    <!-- CREATE Skeleton for template           -->
    <!-- ============================================  -->
    <target name="create">

        <echo msg="Creating Skeleton..."/>

        <!-- REPLACE CONTENT: MANIFESTO  -->
        <copy todir="${folder.skeletons}/${template}">
            <filelist dir="${folder.templates}/${template}/" files="helloworld.xml"/>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="helloworld"                        replace="${component.name}"/>
                    <regexp pattern="HELLOWORLD"                        replace="${component.name.upper}"/>
                    <regexp pattern="helloworld.php"                    replace="\1${component.name.lower}\3"/>
                    <regexp pattern="${manifesto.pattern.creationDate}" replace="\1${manifesto.replace.creationDate}\3"/>
                    <regexp pattern="${manifesto.pattern.author}"       replace="\1${manifesto.replace.author}\3"/>
                    <regexp pattern="${manifesto.pattern.authorEmail}"  replace="\1${manifesto.replace.authorEmail}\3"/>
                    <regexp pattern="${manifesto.pattern.authorUrl}"    replace="\1${manifesto.replace.authorUrl}\3"/>
                    <regexp pattern="${manifesto.pattern.copyright}"    replace="\1${manifesto.replace.copyright}\3"/>
                    <regexp pattern="${manifesto.pattern.license}"      replace="\1${manifesto.replace.license}\3"/>
                    <regexp pattern="${manifesto.pattern.option}"       replace="\1${component.name.lower}\3"/>

                </replaceregexp>
            </filterchain>
        </copy>

        <!-- REPLACE CONTENT: ALL FILES   -->
        <copy todir="${folder.skeletons}">
            <fileset refid="templates.template"/>
        </copy>

        <!-- RENAME FILES   -->
        <!-- RENAME template to component.name   -->
        <echo msg="Rename ${template} to ${component.name}..."/>
        <move   file="${folder.skeletons}/${template}"
                tofile="${folder.skeletons}/${component.name}"
                includeemptydirs="true" />

        <!-- RENAME HELLOWORLD FILES  -->
        <exec command='find ${folder.skeletons}/${component.name} -depth -name "*helloworld*" |  rename "s/helloworld/${component.name.lower}/g"'/>

        <!-- TRANSFORMANDO CONTENIDO  -->
        <reflexive>
            <fileset dir="${folder.skeletons}/${component.name}">
                <include name="**"/>
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="helloworld" replace="${component.name.lower}"/>
                    <regexp pattern="HELLOWORLD" replace="${component.name.upper}"/>
                    <regexp pattern="Hello\s*[Ww]orld" replace="${component.name.upper.first}"/>
                </replaceregexp>
            </filterchain>
        </reflexive>

    </target>
</project>